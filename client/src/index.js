// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Books = require("./Books.js");
var CssJs = require("bs-css-emotion/src/CssJs.js");
var Route = require("./router/Route.js");
var React = require("react");
var Navbar = require("./Navbar.js");
var Challenge = require("./Challenge.js");
var ReactDom = require("react-dom");

require("./index.css");
;

function Index$App(Props) {
  var route = Route.useRoute(undefined);
  var verticalAlign = CssJs.style([
        CssJs.height({
              NAME: "vh",
              VAL: 100
            }),
        CssJs.display("flex"),
        CssJs.flexDirection(CssJs.column)
      ]);
  return React.createElement("div", {
              className: verticalAlign
            }, React.createElement("link", {
                  href: "https://fonts.googleapis.com",
                  rel: "preconnect"
                }), React.createElement("link", {
                  crossOrigin: "anonymous",
                  href: "https://fonts.gstatic.com",
                  rel: "preconnect"
                }), React.createElement("link", {
                  href: "https://fonts.googleapis.com/css2?family=Libre+Baskerville:ital,wght@0,400;0,700;1,400&family=Work+Sans:ital,wght@0,200;0,400;0,800;1,200;1,400;1,800&display=swap",
                  rel: "stylesheet"
                }), React.createElement(Navbar.make, {}), route ? React.createElement(Books.make, {}) : React.createElement(Challenge.make, {}));
}

var App = {
  make: Index$App
};

var root = document.querySelector("#root");

if (root == null) {
  console.log("Error: could not find react element '#root'");
} else {
  ReactDom.render(React.createElement(Index$App, {}), root);
}

exports.App = App;
/*  Not a pure module */
